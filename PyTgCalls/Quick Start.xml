<page>
    <h1>Quick Start</h1>
    <text>The next few steps serve as a quick start for all new Pythoneer that want to see PyTgCalls in action as fast as possible. Let’s go!</text>
    <h2>Get PyTgCalls Real Fast</h2>
    <list style="numbers">
        <item>Install PyTgCalls with <code><shi language="bash">pip3 install -U py-tgcalls</shi></code>.</item>
        <item>Choose your MtProto client between <a href="https://github.com/pyrogram/pyrogram">Pyrogram</a> or <a href="https://github.com/LonamiWebs/Telethon">Telethon</a>.</item>
        <item>Get your own Telegram API key from <a href="https://my.telegram.org/apps">my.telegram.org</a></item>
        <item>
            Open your best text editor and use the following:
            <syntax-highlight>
                from pytgcalls import PyTgCalls
                from pytgcalls import idle
                from pytgcalls.types import AudioPiped
                ...
                chat_id = -1001185324811
                app = PyTgCalls(client)
                app.start()
                app.join_group_call(
                    chat_id,
                    AudioPiped(
                        'http://docs.evostream.com/sample_content/assets/sintel1m720p.mp4',
                    )
                )
                idle()
            </syntax-highlight>
        </item>
        <item>Replace <code>client</code> and <code>chat_id</code> values with your own.</item>
        <item>Save the file as <code>main.py</code>.</item>
        <item>Watch PyTgCalls playing the audio file.</item>
        <item>Join our <a href="https://t.me/PyTgCallsChat">community</a>.</item>
    </list>
    <h2>Enjoy the API</h2>
    <text>
        That was just a quick overview that barely scratched the surface!
        In the following few pages of the introduction,
        we’ll take a much more in-depth look at what we have just done above.

        Are you feeling eager to continue?
        You can take a shortcut to Call Methods and return later to learn more details.
    </text>
</page>