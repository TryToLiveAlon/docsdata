<page>
    <h1>Custom Api</h1>
    <text>
        You have entered the API Reference section where you can find detailed information about Custom API.
        The Front-end API class, all available methods, types, attributes, decorator detailed descriptions can be found starting from this page.

        This page is about the CustomAPI class, which exposes high-level methods for easy access to the API.
    </text>
    <syntax-highlight mark="1-10">
        from pytgcalls import CustomApi

        api = CustomApi()

        @api.on_update_custom_api()
        async def custom_api_request(request: dict):
            print(request)
            return {
                'response': 'FOXES',
            }
        api.start()
    </syntax-highlight>
    <separator/>
    <h2>Details</h2>
    <category>
        <category-title><shi>class</shi> <ref>pytgcalls.<sb>CustomApi</sb></ref></category-title>
        <subtext>
            <text>CustomAPI, the main means host the local http api server.</text>
            <br/>
            <category>
                <pg-title>PARAMETERS</pg-title>
                <subtext>
                    <category-title><ref>port</ref>: <shi>int</shi></category-title>
                    <subtext><text>CustomApi port to bind the API http server</text></subtext>
                </subtext>
            </category>
            <br/>
            <category>
                <pg-title>METHODS</pg-title>
                <subtext>
                    <category-title><ref><sb>start</sb></ref>()</category-title>
                    <subtext><text>This method start the internal http webserver, this is helpful if you need an API interface to PyTgCalls.</text></subtext>
                </subtext>
            </category>
            <br/>
            <category>
                <pg-title>DECORATORS</pg-title>
                <subtext>
                    <category-title><ref><sb>@on_update_custom_api</sb></ref>()</category-title>
                    <subtext>
                        <text>Decorator for handling incoming http events</text>
                        <pg-title>RAISES</pg-title>
                        <subtext>
                            <category-title>exception <ref>pytgcalls.exceptions.<sb>TooManyCustomApiDecorators</sb></ref></category-title>
                            <subtext><text>You set too many decorators.</text></subtext>
                        </subtext>
                    </subtext>
                </subtext>
            </category>
        </subtext>
    </category>
</page>